{"version":3,"sources":["components/NotesPage/NoteItem.jsx","components/common/Preloader.jsx","components/common/Modal/Modal.jsx","redux/reducers/NotesReducer.js","api/api.js","components/common/Modal/ModalContainer.jsx","assets/image/trash-solid.png","components/NotesPage/Notes.jsx","components/NotesPage/NotesContainer.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["NoteItem","props","className","note","tags","onClick","id","document","body","classList","add","toggleModal","deleteNote","Preloader","Modal","noteText","React","createRef","editNoteId","newNoteText","split","filter","word","map","index","ref","onInput","current","value","updateNoteText","updateNotes","remove","UPDATE_NOTES_ARR","TOGGLE_MODAL","DELETE_NOTE","SET_NOTES","TOGGLE_PRELOADER","UPDATE_NOTE_TEXT","UPDATE_FILTER_TEXT","FILTER_NOTES","DELETE_FILTER","isModal","noteId","type","updateNotesArr","data","togglePreloader","isFetching","initialState","notes","filterValue","filterNotesArr","NotesReducer","state","action","newNotesArr","_id","join","newNote","addDate","push","editNote","newNotes","filterText","newFilterNotes","indexOf","instance","axios","create","baseURL","crossDomain","headers","NotesAPI","getNotes","get","then","response","delete","addNote","date","post","updateNote","newValue","put","ModalContainer","Date","render","Component","connect","notesPage","NoteContent","tagText","createNoteArr","onChange","newFilterText","updateFilterText","filterNotes","deleteFilter","src","trashPic","alt","Notes","NotesContainer","this","setNotes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","window","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f55d10da.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NoteItem = (props) => {\r\n\r\n  const toggleModal = (id) => {\r\n    document.body.classList.add('lock');\r\n    props.toggleModal(true, id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"wr-note\">\r\n      <h3>{props.note}</h3>\r\n      <p>{props.tags}</p>\r\n      <div className=\"wr-btn\">\r\n        <button onClick={()=> toggleModal(props.id)}>Edit</button>\r\n        <button className=\"delete-btn\" onClick={() => props.deleteNote(props.id)}>Ã—</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteItem;\r\n","import React from \"react\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div id=\"cube-loader\">\r\n      <div className=\"caption\">\r\n        <div className=\"cube-loader\">\r\n          <div className=\"cube loader-1\"></div>\r\n          <div className=\"cube loader-2\"></div>\r\n          <div className=\"cube loader-4\"></div>\r\n          <div className=\"cube loader-3\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preloader;\r\n","import React from 'react';\r\n\r\nconst Modal = (props) => {\r\n  const noteText = React.createRef();\r\n\r\n  const onNoteChange = () => {\r\n    let newNoteText = noteText.current.value;\r\n    props.updateNoteText(newNoteText);\r\n  };\r\n\r\n  const toggleModal = ()=> {\r\n    document.body.classList.remove('lock');\r\n    props.toggleModal(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <h2>{props.editNoteId ? 'Edit note' : 'Add new note'}</h2>\r\n        {props.editNoteId ?\r\n          <div className='tags-selection'> {\r\n            props.newNoteText.split(' ')\r\n                              .filter(word => word[0] === '#')\r\n                              .map((word, index) => <span className='tags' key={`tags-${index}`}>{word}</span>)\r\n          } </div> : ''}\r\n        <textarea ref={noteText} onInput={onNoteChange} value={props.newNoteText} />\r\n        <button onClick={() => props.updateNotes(props.editNoteId)}>Save</button>\r\n        <button className=\"close-btn\" onClick={() => toggleModal()}>Ã—</button>\r\n      </div>\r\n      <div className=\"modal-shadow\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","const UPDATE_NOTES_ARR = 'UPDATE-NOTES-ARR';\r\nconst TOGGLE_MODAL = 'TOGGLE-MODAL';\r\nconst DELETE_NOTE = 'DELETE-NOTE';\r\nconst SET_NOTES = 'SET-NOTES';\r\nconst TOGGLE_PRELOADER = 'TOGGLE-PRELOADER';\r\nconst UPDATE_NOTE_TEXT = 'UPDATE-NOTE-TEXT';\r\nconst UPDATE_FILTER_TEXT = 'UPDATE-FILTER-TEXT';\r\nconst FILTER_NOTES = 'FILTER-NOTES';\r\nconst DELETE_FILTER = 'DELETE-FILTER';\r\n\r\nexport const setNotes = (notes) => ({type: SET_NOTES, notes});\r\nexport const toggleModal = (isModal, noteId = null) => ({type: TOGGLE_MODAL, isModal, noteId});\r\nexport const updateNotesArr = (data, noteId = null) => ({type: UPDATE_NOTES_ARR, data, noteId});\r\nexport const deleteNote = (noteId) => ({type: DELETE_NOTE, noteId});\r\nexport const togglePreloader = (isFetching) => ({type: TOGGLE_PRELOADER, isFetching});\r\nexport const updateNoteText = (noteText) => ({type: UPDATE_NOTE_TEXT, noteText});\r\nexport const updateFilterText = (filterText) => ({type: UPDATE_FILTER_TEXT, filterText});\r\nexport const filterNotes = () => ({type: FILTER_NOTES});\r\nexport const deleteFilter = () => ({type: DELETE_FILTER});\r\n\r\nconst initialState = {\r\n  notes: null,\r\n  newNoteText: 'New note',\r\n  isModal: false,\r\n  editNoteId: null,\r\n  isFetching: false,\r\n  filterValue: '#',\r\n  filterNotesArr: null,\r\n}\r\n\r\nconst NotesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NOTES:\r\n      return {\r\n        ...state,\r\n        notes: [...action.notes],\r\n      };\r\n    case TOGGLE_PRELOADER:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case UPDATE_NOTES_ARR:\r\n      let newNotesArr = [...state.notes];\r\n      if (action.noteId) {\r\n        let newNotesArr = state.notes.map(note => {\r\n          if (note._id === action.noteId) {\r\n            note.value = action.data;\r\n            note.tags = action.data.split(' ').filter(word => word[0] === '#').join(' ');\r\n          }\r\n          return note;\r\n        });\r\n\r\n        return {\r\n          ...state,\r\n          notes: newNotesArr,\r\n          editNoteId: null,\r\n        };\r\n      } else {\r\n        let newNote = {\r\n          _id: action.data._id,\r\n          id: action.data.id,\r\n          value: action.data.value,\r\n          addDate: action.data.addDate,\r\n          tags: action.data.value.split(' ').filter(word => word[0] === '#').join(' '),\r\n        };\r\n\r\n        newNotesArr.push(newNote);\r\n\r\n        return {\r\n          ...state,\r\n          notes: newNotesArr,\r\n        };\r\n      }\r\n    case TOGGLE_MODAL:\r\n      if (action.noteId) {\r\n        let editNote = state.notes.filter(note => {\r\n          if (note._id === action.noteId) {\r\n            return note;\r\n          }\r\n        });\r\n        return {\r\n          ...state,\r\n          isModal: action.isModal,\r\n          editNoteId: action.noteId,\r\n          newNoteText: editNote[0].value,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          isModal: action.isModal,\r\n          editNoteId: null,\r\n          newNoteText: 'New note',\r\n        };\r\n      }\r\n    case DELETE_NOTE:\r\n      let newNotes = state.notes.filter(note => note._id !== action.noteId);\r\n      return {\r\n        ...state,\r\n        notes: newNotes,\r\n      };\r\n    case UPDATE_NOTE_TEXT:\r\n      return {\r\n        ...state,\r\n        newNoteText: action.noteText,\r\n      };\r\n    case UPDATE_FILTER_TEXT:\r\n      return {\r\n        ...state,\r\n        filterValue: action.filterText,\r\n      };\r\n    case FILTER_NOTES:\r\n      if (!state.filterValue || state.filterValue === '#') {\r\n        return {\r\n          ...state,\r\n          filterNotesArr: null,\r\n        };\r\n      }\r\n      let newFilterNotes = state.notes.filter(note => {\r\n        if (note.tags && note.tags.split(' ').indexOf( state.filterValue ) !== -1) {\r\n          return note;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        filterNotesArr: newFilterNotes,\r\n      };\r\n    case DELETE_FILTER:\r\n      return {\r\n        ...state,\r\n        filterNotesArr: null,\r\n        filterValue: '#',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default NotesReducer;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://todolist-7bfe.restdb.io/rest/',\r\n  crossDomain: true,\r\n  headers: {\r\n    \"x-apikey\": \"60c865cee2c96c46a2463560\",\r\n  }\r\n})\r\n\r\nconst NotesAPI = {\r\n  getNotes() {\r\n    return instance.get('todo').then(response => response.data);\r\n  },\r\n  deleteNote(noteId) {\r\n    return instance.delete('todo/' + noteId).then(response => response.data);\r\n  },\r\n  addNote(note, date) {\r\n    return instance.post('todo', {\r\n      value: note,\r\n      tags: note.split(' ').filter(word => word[0] === '#').join(' '),\r\n      addDate: date,\r\n    }).then(response => response.data);\r\n  },\r\n  updateNote(noteId, newValue) {\r\n    return instance.put('todo/' + noteId, {\r\n      value: newValue,\r\n      tags: newValue.split(' ').filter(word => word[0] === '#').join(' '),\r\n    });\r\n  }\r\n}\r\n\r\nexport default NotesAPI;\r\n","import React from 'react';\r\nimport Modal from \"./Modal\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal, togglePreloader, updateNotesArr, updateNoteText} from \"../../../redux/reducers/NotesReducer\";\r\nimport NotesAPI from \"../../../api/api\";\r\n\r\nclass ModalContainer extends React.Component {\r\n  updateNotes = (noteId = null) => {\r\n    this.props.togglePreloader(true);\r\n    if (noteId) {\r\n      NotesAPI.updateNote(noteId, this.props.newNoteText).then(response => {\r\n        this.props.togglePreloader(false);\r\n        this.props.toggleModal(false);\r\n        document.body.classList.remove('lock');\r\n        this.props.updateNotesArr(this.props.newNoteText, noteId);\r\n      });\r\n    } else {\r\n      NotesAPI.addNote(this.props.newNoteText, new Date()).then(data => {\r\n        if (data) {\r\n          this.props.togglePreloader(false);\r\n          this.props.toggleModal(false);\r\n          document.body.classList.remove('lock');\r\n          this.props.updateNotesArr(data);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    return <Modal {...this.props} updateNotes={this.updateNotes}/>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notes: state.notesPage.notes,\r\n    newNoteText: state.notesPage.newNoteText,\r\n    editNoteId: state.notesPage.editNoteId,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {toggleModal, togglePreloader, updateNotesArr, updateNoteText})(ModalContainer);\r\n","export default __webpack_public_path__ + \"static/media/trash-solid.fb7bc740.png\";","import React from 'react';\r\nimport NoteItem from \"./NoteItem\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport ModalContainer from \"../common/Modal/ModalContainer\";\r\nimport trashPic from \"../../assets/image/trash-solid.png\";\r\n\r\nconst Notes = (props) => {\r\n  return (\r\n    <>\r\n      {props.isFetching ? <Preloader/> : <NoteContent {...props}/>}\r\n      {props.isModal ? <ModalContainer/> : ''}\r\n    </>\r\n  );\r\n}\r\n\r\nconst NoteContent = (props) => {\r\n  const tagText = React.createRef();\r\n  let notes = [];\r\n\r\n  const createNoteArr = (notes) => {\r\n    return notes.map(note => <NoteItem key={note.id} id={note._id} note={note.value}  tags={note.tags} date={note.addDate}\r\n                                       deleteNote={props.deleteNote} toggleModal={props.toggleModal}/>);\r\n  }\r\n\r\n  if (props.filterNotesArr) {\r\n    notes = createNoteArr(props.filterNotesArr);\r\n  } else if (props.notes) {\r\n    notes = createNoteArr(props.notes);\r\n  }\r\n\r\n  const onFilterChange = () => {\r\n    let newFilterText = tagText.current.value;\r\n    props.updateFilterText(newFilterText);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    document.body.classList.add('lock');\r\n    props.toggleModal(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"wr-content\">\r\n      <button className=\"add-btn\" onClick={() => toggleModal()}>Add note</button>\r\n      <h1>TO DO LIST APP</h1>\r\n      <div className=\"notes-container\">\r\n        {notes}\r\n      </div>\r\n      <div className=\"wr-filter\">\r\n        <input type=\"text\" ref={tagText} onChange={onFilterChange} value={props.filterValue}/>\r\n        <button onClick={props.filterNotes}>Find tag</button>\r\n        <button className=\"wr-pic\" onClick={()=>props.deleteFilter()}>\r\n          <img src={trashPic} alt=\"trash\"/>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n    ;\r\n}\r\n\r\nexport default Notes;\r\n","import React from 'react';\r\nimport Notes from \"./Notes\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  deleteFilter,\r\n  deleteNote, filterNotes,\r\n  setNotes,\r\n  toggleModal,\r\n  togglePreloader, updateFilterText,\r\n  updateNotesArr\r\n} from \"../../redux/reducers/NotesReducer\";\r\nimport NotesAPI from \"../../api/api\";\r\n\r\nclass NotesContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.togglePreloader(true);\r\n    NotesAPI.getNotes().then(data => {\r\n      if (data) {\r\n        this.props.togglePreloader(false);\r\n        this.props.setNotes(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteNote = (noteId) => {\r\n    this.props.togglePreloader(true);\r\n    NotesAPI.deleteNote(noteId).then(data => {\r\n      if (data) {\r\n        this.props.togglePreloader(false);\r\n        this.props.deleteNote(noteId);\r\n      }\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Notes {...this.props} deleteNote={this.deleteNote}/>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notes: state.notesPage.notes,\r\n    isModal: state.notesPage.isModal,\r\n    newNoteText: state.notesPage.newNoteText,\r\n    isFetching: state.notesPage.isFetching,\r\n    filterValue: state.notesPage.filterValue,\r\n    filterNotesArr: state.notesPage.filterNotesArr,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  setNotes,\r\n  toggleModal,\r\n  updateNotesArr,\r\n  deleteNote,\r\n  togglePreloader,\r\n  updateFilterText,\r\n  filterNotes,\r\n  deleteFilter\r\n})(NotesContainer);\r\n","import React from \"react\";\nimport NotesContainer from \"./components/NotesPage/NotesContainer\";\n\nfunction App() {\n  return (\n    <NotesContainer/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport NotesReducer from \"./reducers/NotesReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  notesPage: NotesReducer\r\n})\r\n\r\nconst store = createStore(reducers);\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}